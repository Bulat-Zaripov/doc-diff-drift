// Пример документов для демонстрации
export const sampleDocuments = [
  {
    id: 'doc_1',
    name: 'doc_1.md',
    content: `# Техническое задание

## Общее описание проекта

Разработка веб-приложения для управления документами компании.

### Основные функции:
- Создание документов
- Редактирование существующих документов
- Просмотр истории изменений

## Технические требования

### Фронтенд
- React 18+
- TypeScript
- Tailwind CSS

### Бэкенд
- Node.js
- Express
- MongoDB

## Временные рамки

Проект должен быть завершен в течение 2 месяцев.

### Этапы:
1. Планирование (1 неделя)
2. Разработка MVP (4 недели)
3. Тестирование (2 недели)
4. Деплой (1 неделя)
`
  },
  {
    id: 'doc_2',
    name: 'doc_2.md',
    content: `# Техническое задание

## Общее описание проекта

Разработка веб-приложения для управления документами и контентом компании.

### Основные функции:
- Создание и импорт документов
- Редактирование существующих документов с версионированием
- Просмотр истории изменений и сравнение версий
- Поиск по документам
- Управление правами доступа

## Технические требования

### Фронтенд
- React 18+
- TypeScript
- Tailwind CSS
- React Query для управления состоянием

### Бэкенд
- Node.js
- Express
- PostgreSQL (изменено с MongoDB)
- Redis для кэширования

### Безопасность
- JWT аутентификация
- RBAC система ролей
- Шифрование чувствительных данных

## Временные рамки

Проект должен быть завершен в течение 3 месяцев (увеличено).

### Этапы:
1. Планирование и дизайн (2 недели)
2. Разработка MVP (6 недель)
3. Дополнительные функции (2 недели)
4. Тестирование (3 недели)
5. Деплой и оптимизация (1 неделя)

## Дополнительные требования

- Адаптивный дизайн
- Поддержка темной темы
- Экспорт в PDF
`
  },
  {
    id: 'doc_3',
    name: 'doc_3.md',
    content: `# Техническое задание

## Общее описание проекта

Разработка комплексной системы управления документами и контентом компании с интеграцией внешних сервисов.

### Основные функции:
- Создание и импорт документов из различных источников
- Редактирование существующих документов с полным версионированием
- Просмотр истории изменений и сравнение версий
- Расширенный поиск по документам с фильтрами
- Гибкое управление правами доступа
- Интеграция с внешними системами (CRM, ERP)
- API для сторонних приложений

## Технические требования

### Фронтенд
- React 18+
- TypeScript
- Tailwind CSS
- React Query для управления состоянием
- Zustand для локального состояния

### Бэкенд
- Node.js
- NestJS (изменено с Express)
- PostgreSQL с репликацией
- Redis для кэширования и очередей
- Elasticsearch для поиска

### Инфраструктура
- Docker контейнеризация
- Kubernetes для оркестрации
- CI/CD pipeline
- Мониторинг и логирование

### Безопасность
- OAuth 2.0 / OIDC аутентификация
- RBAC система ролей с детальными правами
- Шифрование данных в покое и в движении
- Аудит действий пользователей

## Временные рамки

Проект должен быть завершен в течение 4 месяцев.

### Этапы:
1. Планирование и архитектура (3 недели)
2. Настройка инфраструктуры (2 недели)
3. Разработка core функционала (8 недель)
4. Интеграции (3 недели)
5. Тестирование и QA (3 недели)
6. Деплой и стабилизация (1 неделя)

## Дополнительные требования

- Полностью адаптивный дизайн
- PWA поддержка
- Поддержка темной темы
- Экспорт в различные форматы (PDF, Word, Excel)
- Многоязычность (i18n)
- Офлайн режим
- Push уведомления

## Интеграции

- Google Workspace
- Microsoft 365
- Slack/Teams уведомления
- Webhooks для внешних систем
`
  }
];